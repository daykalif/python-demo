"""
Django settings for bookmanager project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# __file__ 表示文件的名字
# settings.py

# os.path.abspath(__file__)
# abspath 是绝对路径
# /Users/wangjiaping/work/project/server_learn/python/coding/DjangoDemo/bookmanager/bookmanager/settings.py

# os.path.dirname(os.path.abspath(__file__))
# dir 文件夹/文件目录
# /Users/wangjiaping/work/project/server_learn/python/coding/DjangoDemo/bookmanager/bookmanager

# os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# BASE_DIR
# /Users/wangjiaping/work/project/server_learn/python/coding/DjangoDemo/bookmanager

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'fr$hcocpj#*7pvelq1(u#pb!cw7a^ioj%5$qw)ql+)nhwl&q@o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

# 注册子应用
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'book',
    'login.apps.LoginConfig',
    'pay.apps.PayConfig',
    # '子应用'，
    # '子应用名.apps.子应用名config'  login.apps.LoginConfig = login
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# ROOT_URLCONF是我们工程的url的配置入口
# 默认是 工程名.urls
# 可以修改，但是我们一般不进行更改
ROOT_URLCONF = 'bookmanager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # dirs：设置模板路径
        'DIRS': [os.path.join(BASE_DIR, 'template')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmanager.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# 语言
# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-Hans'

# 时区
# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# django是如何区分 静态资源和动态资源的呢？
# 就是通过 STATIC_URL
# 我们在访问静态资源 http://ip:port + STATIC_URL + 文件名
# django就会认为我们在访问静态资源，这个时候会去静态资源文件夹中进行匹配；否则动态资源会根据路由去匹配
STATIC_URL = '/static/'

# 告知系统静态文件路径在哪里
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
